{"version":3,"sources":["components/NavBar/index.jsx","components/Footer/index.jsx","constants.js","components/WarningMessage/index.jsx","components/Meter/Form.jsx","components/Meter/Meter.jsx","App.jsx","registerServiceWorker.js","index.jsx","components/Footer/footer.module.css","components/NavBar/navbar.module.css","components/WarningMessage/warningmessage.module.css"],"names":["NavBar","Fragment","className","styles","skipLink","href","to","Footer","footer","title","description","CONSTANTS","ERROR_MESSAGE","LIST_DELETE","LIST_ADD","LIST_GET","LIST_EMPTY_MESSAGE","ENDPOINT","LIST","METERDETAILS","METERSERIALNUMBERS","WarningMessage","open","text","onWarningClose","classnames","warningPosition","role","onClick","aria-label","aria-hidden","Form","params","useState","value","setValue","React","inputValue","setInputValue","items","setItems","warningMessageOpen","warningMessageText","warningMessage","setWarningMessage","useEffect","fetch","then","response","ok","Error","statusText","json","serialnumbers","catch","error","onSubmit","e","preventDefault","plotChart","Autocomplete","freeSolo","onChange","event","newValue","onInputChange","newInputValue","id","disableClearable","options","map","item","style","width","renderInput","TextField","label","margin","variant","InputProps","type","Meter","textField","method","headers","itemAdded","serialnumber","averageWH","parseFloat","toFixed","averageVARH","xaxis","data","x","y","yaxisWHresult","name","marker","color","yaxisVARHresult","layout","b","height","yaxis","tickangle","titlefont","size","autosize","config","responsive","displaylogo","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.a6ac63bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"./navbar.module.css\";\r\n\r\n//TODO Web Template Studio: Add a new link in the NavBar for your page here.\r\n// A skip link is included as an accessibility best practice. For more information visit https://www.w3.org/WAI/WCAG21/Techniques/general/G1.\r\nconst NavBar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.skipLink}>\r\n        <a href=\"#mainContent\">Skip to Main Content</a>\r\n      </div>\r\n      <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Metering Solution\r\n        </Link>\r\n        <div className=\"navbar-nav\">\r\n          \r\n          <Link className=\"nav-item nav-link active\" to=\"List\">\r\n            Dashboard\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport styles from \"./footer.module.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row justify-content-around\">\r\n          <div className=\"col-8 col-md-5\">\r\n            <h5 className={styles.title}>Meterings Solution</h5>\r\n            <p className={styles.description}>\r\n              Readings of WH and VARH\r\n            </p>\r\n          </div>\r\n          <div className=\"col-2\">\r\n            {/* <ul className=\"list-unstyled\">\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a className={styles.footerlink} href=\"/\">\r\n                  Example Link\r\n                </a>\r\n              </li>\r\n            </ul> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\nexport default Footer;","const CONSTANTS = {};\r\n\r\nCONSTANTS.ERROR_MESSAGE = {};\r\n\r\nCONSTANTS.ERROR_MESSAGE.LIST_DELETE = \"Request to delete list item failed:\";\r\nCONSTANTS.ERROR_MESSAGE.LIST_ADD = \"Request to add list item failed:\";\r\nCONSTANTS.ERROR_MESSAGE.LIST_GET = \"Request to get list items failed:\";\r\nCONSTANTS.ERROR_MESSAGE.LIST_EMPTY_MESSAGE = \"Please enter a valid message\";\r\n\r\nCONSTANTS.ENDPOINT = {};\r\n\r\nCONSTANTS.ENDPOINT.LIST = \"/api/list\";\r\nCONSTANTS.ENDPOINT.METERDETAILS = \"/api/meterData\";\r\nCONSTANTS.ENDPOINT.METERSERIALNUMBERS = \"/api/meterSerialNumbers\";\r\nexport default CONSTANTS;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\nimport styles from \"./warningmessage.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// A pop up message used to warn users about failed API calls to the back end\r\nconst WarningMessage = ({ open, text, onWarningClose }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {open && (\r\n        <div\r\n          className={classnames(\r\n            \"alert\",\r\n            \"alert-warning\",\r\n            \"ml-3\",\r\n            styles.warningPosition\r\n          )}\r\n          role=\"alert\"\r\n        >\r\n          {text}\r\n          <button\r\n            onClick={onWarningClose}\r\n            className=\"close ml-2\"\r\n            aria-label=\"Close\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nWarningMessage.propTypes = {\r\n  open: PropTypes.bool,\r\n  text: PropTypes.string,\r\n  onWarningClose:PropTypes.func\r\n}\r\n\r\nexport default WarningMessage;","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CONSTANTS from \"../../constants\";\r\nimport WarningMessage from \"../WarningMessage\";\r\nconst getSerialNumbers = () => {\r\n  let promiseList = fetch(CONSTANTS.ENDPOINT.METERSERIALNUMBERS)\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    })\r\n  return promiseList;\r\n}\r\n\r\n\r\nconst Form = (params) => {\r\n\r\n  // const [textField, setTextField] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const [inputValue, setInputValue] = React.useState('');\r\n  const [items, setItems] = useState([]);\r\n  const [warningMessage, setWarningMessage] = useState({ warningMessageOpen: false, warningMessageText: \"\" });\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    params.plotChart(inputValue);\r\n    setInputValue(\"\");\r\n\r\n  }\r\n  const closeWarningMessage = () => {\r\n    setWarningMessage({\r\n      warningMessageOpen: false,\r\n      warningMessageText: \"\"\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getSerialNumbers()\r\n      .then(serialnumbers => { setItems(serialnumbers) })\r\n      .catch(error =>\r\n        setWarningMessage({\r\n          warningMessageOpen: true,\r\n          warningMessageText: `${CONSTANTS.ERROR_MESSAGE.LIST_GET} ${error}`\r\n        })\r\n      );\r\n  }, []);\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"input-group my-3\">\r\n\r\n\r\n      <br />\r\n      <Autocomplete\r\n        freeSolo\r\n        value={value}\r\n        onChange={(event: any, newValue: string | null) => {\r\n          setValue(newValue);\r\n        }}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        id=\"free-solo-2-demo\"\r\n        disableClearable\r\n        options={items.map((item) => item)}\r\n        style={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            label=\"Search Serial Number\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            InputProps={{ ...params.InputProps, type: 'search' }}\r\n          />\r\n        )}\r\n      />\r\n      <br />\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n      <WarningMessage\r\n        open={warningMessage.warningMessageOpen}\r\n        text={warningMessage.warningMessageText}\r\n        onWarningClose={closeWarningMessage}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport WarningMessage from \"../WarningMessage\";\r\nimport CONSTANTS from \"../../constants\";\r\n\r\n\r\n// simplest method: uses precompiled complete bundle from `plotly.js`\r\nimport PlotlyChart from 'react-plotlyjs-ts';\r\n\r\n// customizable method: use your own `Plotly` object\r\n// import createPlotlyComponent from 'react-plotly.js/factory';\r\n// const Plot = createPlotlyComponent(Plotly);\r\n\r\nconst Meter = () => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  const [warningMessage, setWarningMessage] = useState({ warningMessageOpen: false, warningMessageText: \"\" });\r\n  const plotChart = (textField) => {\r\n    // Warning Pop Up if the user submits an empty message\r\n    if (!textField) {\r\n      setWarningMessage({\r\n        warningMessageOpen: true,\r\n        warningMessageText: CONSTANTS.ERROR_MESSAGE.LIST_EMPTY_MESSAGE\r\n      });\r\n      return;\r\n    }\r\n    fetch(`${CONSTANTS.ENDPOINT.METERDETAILS}/${textField}`, {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" }\r\n    })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(itemAdded => {\r\n        setItems(\"\");\r\n        setItems(itemAdded);\r\n      })\r\n      .catch(error =>\r\n        setWarningMessage({\r\n          warningMessageOpen: true,\r\n          warningMessageText: `${CONSTANTS.ERROR_MESSAGE.LIST_ADD} ${error}`\r\n        })\r\n      );\r\n  };\r\n\r\n  const closeWarningMessage = () => {\r\n    setWarningMessage({\r\n      warningMessageOpen: false,\r\n      warningMessageText: \"\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <main id=\"mainContent\" className=\"container\">\r\n      <div className=\"row justify-content-center py-5\">\r\n        <h3>Dashboard</h3>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 p-0\">\r\n          <Form plotChart={plotChart} />\r\n        </div>\r\n      </div>\r\n      {items.serialnumber ?\r\n        <div className=\"row\">\r\n          <div className=\"col-12 p-0\">\r\n            <label>\r\n              Meter Serial Number : <b> {items.serialnumber}</b>\r\n            </label>\r\n          </div>\r\n        </div> : null\r\n      }\r\n      {items.averageWH ?\r\n        <div className=\"row\">\r\n          <div className=\"col-12 p-0\">\r\n            <label>\r\n              The average half hourly WH values is : <b>{parseFloat(items.averageWH).toFixed(2)}</b>\r\n            </label>\r\n          </div>\r\n        </div> : null\r\n      }\r\n      {items.averageVARH ?\r\n        <div className=\"row\">\r\n          <div className=\"col-12 p-0\">\r\n            <label>\r\n              The average  half hourly VARH values is : <b> {parseFloat(items.averageVARH).toFixed(2)}</b>\r\n            </label>\r\n          </div>\r\n        </div> : null\r\n      }\r\n       {items.averageVARH ?\r\n        <div className=\"row\">\r\n          <div className=\"col-12 p-0\">\r\n            <label>\r\n              The below chart displays the trend of every half hourly values of WH and VARH.\r\n            </label>\r\n          </div>\r\n        </div> : null\r\n      }\r\n      {items.xaxis ?\r\n\r\n        <PlotlyChart\r\n          data={[\r\n            {\r\n              x: items.xaxis\r\n              ,\r\n              y: items.yaxisWHresult\r\n              ,\r\n              type: 'scatter',\r\n              width: 'auto',\r\n              name: 'WH',\r\n              marker: { color: 'blue' },\r\n            },\r\n            {\r\n              x: items.xaxis\r\n              ,\r\n              y: items.yaxisVARHresult\r\n              ,\r\n              type: 'scatter',\r\n              width: 'auto',\r\n              name: 'VARH',\r\n              marker: { color: 'red' },\r\n            }\r\n          ]}\r\n          layout={{\r\n            margin: { b: 150 },\r\n            width: 1028, height: 400,\r\n            yaxis: { title: 'Unit', tickangle: 270, titlefont: { size: 18 } },\r\n            xaxis: { title: 'Date', titlefont: { size: 18 } },\r\n\r\n            autosize: true,\r\n            title: 'Meter Graph with WH and VARH'\r\n          }}\r\n          config={{ responsive: true, displaylogo: false }}\r\n        /> : null}\r\n      <WarningMessage\r\n        open={warningMessage.warningMessageOpen}\r\n        text={warningMessage.warningMessageText}\r\n        onWarningClose={closeWarningMessage}\r\n      />\r\n\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Meter;","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Footer from \"./components/Footer\";\r\n\r\n// import Blank from \"./components/Blank/Blank\";\r\n\r\nimport Meter from \"./components/Meter/Meter\";\r\n\r\n//TODO Web Template Studio: Add routes for your new pages here.\r\nconst App = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path = \"/\" component = { Meter } />\r\n          <Route path = \"/Meter\" component = { Meter } />\r\n        </Switch>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n/**  \r\n * Be aware that the website will only update to the latest version on the 2nd page visit if it as already cached \r\n * Learn more about service workers in React: https://create-react-app.dev/docs/making-a-progressive-web-app\r\n */\r\nregisterServiceWorker();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__16DCu\",\"title\":\"footer_title__YJHcl\",\"description\":\"footer_description__2-hjs\",\"footerlink\":\"footer_footerlink__3l1rt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skipLink\":\"navbar_skipLink__3EZXQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warningPosition\":\"warningmessage_warningPosition__12kvB\"};"],"sourceRoot":""}